# 注意: 此workflow已被 run-test.yml 替代
# 新的workflow直接执行 run.sh 脚本进行测试
# 如需使用此workflow，请手动触发或修改触发器

name: Build, Test and Debug ARMv7 Binary

# 已禁用 - 使用 run-test.yml 替代
# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
#   workflow_dispatch:
#     inputs:
#       debug_mode:
#         description: '启用调试模式'
#         required: false
#         default: 'false'
#         type: boolean

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # 设置超时时间
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 安装ARM交叉编译工具链
      run: |
        sudo apt-get update -qq  # 静默更新
        sudo apt-get install -y --no-install-recommends \
          gcc-arm-linux-gnueabihf \
          g++-arm-linux-gnueabihf \
          qemu-user-static \
          binutils-arm-linux-gnueabihf
        
    - name: 验证工具链安装
      run: |
        arm-linux-gnueabihf-gcc --version | head -1
        qemu-arm --version | head -1
        echo "✅ 工具链安装成功"
        
    - name: 编译ARMv7二进制文件
      run: |
        echo "🔨 开始编译..."
        make clean
        make demo_armv7
        echo "✅ 编译完成"
        
    - name: 快速验证
      run: |
        echo "🔍 验证二进制文件..."
        file demo_armv7
        echo "文件大小: $(stat -c%s demo_armv7) 字节"
        
    - name: 快速测试执行
      run: |
        echo "🚀 测试执行..."
        chmod +x demo_armv7
        timeout 30s qemu-arm -L /usr/arm-linux-gnueabihf demo_armv7 || echo "执行完成"
        
    - name: 调试模式（可选）
      if: ${{ github.event.inputs.debug_mode == 'true' }}
      run: |
        echo "🐛 调试模式..."
        echo "程序大小: $(stat -c%s demo_armv7) 字节"
        readelf -h demo_armv7 | grep -E "(Machine|Class|Data)"
        
    - name: 创建发布包
      run: |
        echo "📦 创建发布包..."
        mkdir -p release
        cp demo_armv7 release/
        cp main.c release/
        cp Makefile release/
        echo "构建时间: $(date)" > release/build_info.txt
        echo "Git提交: ${{ github.sha }}" >> release/build_info.txt
        echo "目标架构: ARMv7" >> release/build_info.txt
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: armv7-binary
        path: release/
        retention-days: 30
        
    - name: 显示结果摘要
      run: |
        echo "🎉 构建完成!"
        echo "📁 产物: release/"
        echo "📊 文件大小: $(stat -c%s demo_armv7) 字节"
        echo "✅ 状态: 成功" 