name: Debug ARMv7 Binary

on:
  workflow_dispatch:
    inputs:
      debug_level:
        description: '调试级别'
        required: true
        default: 'basic'
        type: choice
        options:
        - basic
        - detailed
        - full
      run_tests:
        description: '运行测试套件'
        required: false
        default: true
        type: boolean

jobs:
  debug:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 安装调试工具
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf qemu-user-static gdb-multiarch strace
        
    - name: 编译调试版本
      run: |
        echo "=== 编译调试版本 ==="
        arm-linux-gnueabihf-gcc -g -O0 -Wall -Wextra -std=c99 -o demo_armv7_debug main.c -lm
        
    - name: 基本调试信息
      run: |
        echo "=== 基本调试信息 ==="
        echo "文件大小: $(stat -c%s demo_armv7_debug) 字节"
        echo "文件类型: $(file demo_armv7_debug)"
        echo "架构信息:"
        readelf -h demo_armv7_debug | grep -E "(Machine|Class|Data|OS/ABI|Entry point)"
        
    - name: 详细调试信息
      if: ${{ github.event.inputs.debug_level == 'detailed' || github.event.inputs.debug_level == 'full' }}
      run: |
        echo "=== 详细调试信息 ==="
        echo "符号表:"
        readelf -s demo_armv7_debug | grep -E "(main|add|multiply|power|reverse_string)"
        echo ""
        echo "段信息:"
        readelf -S demo_armv7_debug | head -15
        echo ""
        echo "依赖库:"
        readelf -d demo_armv7_debug 2>/dev/null || echo "无动态依赖"
        
    - name: 完整调试信息
      if: ${{ github.event.inputs.debug_level == 'full' }}
      run: |
        echo "=== 完整调试信息 ==="
        echo "反汇编 main 函数:"
        arm-linux-gnueabihf-objdump -d demo_armv7_debug | grep -A 50 "<main>:"
        echo ""
        echo "所有符号:"
        arm-linux-gnueabihf-nm demo_armv7_debug
        
    - name: 执行测试
      if: ${{ github.event.inputs.run_tests == 'true' }}
      run: |
        echo "=== 执行测试 ==="
        chmod +x demo_armv7_debug
        
        echo "1. 基本执行测试:"
        qemu-arm -L /usr/arm-linux-gnueabihf demo_armv7_debug
        
        echo ""
        echo "2. 系统调用跟踪:"
        qemu-arm -L /usr/arm-linux-gnueabihf -strace demo_armv7_debug 2>&1 | head -20
        
        echo ""
        echo "3. 内存使用分析:"
        echo "程序启动时的内存映射:"
        qemu-arm -L /usr/arm-linux-gnueabihf -d in_asm demo_armv7_debug 2>&1 | head -10
        
    - name: 性能分析
      if: ${{ github.event.inputs.debug_level == 'detailed' || github.event.inputs.debug_level == 'full' }}
      run: |
        echo "=== 性能分析 ==="
        echo "执行时间基准测试:"
        for i in {1..3}; do
          echo "运行 $i:"
          /usr/bin/time -f "用户时间: %U秒, 系统时间: %S秒, 总时间: %E秒" \
            qemu-arm -L /usr/arm-linux-gnueabihf demo_armv7_debug > /dev/null 2>&1
        done
        
    - name: 创建调试报告
      run: |
        echo "=== 调试报告 ===" > debug_report.txt
        echo "调试时间: $(date)" >> debug_report.txt
        echo "调试级别: ${{ github.event.inputs.debug_level }}" >> debug_report.txt
        echo "运行测试: ${{ github.event.inputs.run_tests }}" >> debug_report.txt
        echo "Git提交: ${{ github.sha }}" >> debug_report.txt
        echo "" >> debug_report.txt
        
        echo "=== 程序输出 ===" >> debug_report.txt
        qemu-arm -L /usr/arm-linux-gnueabihf demo_armv7_debug >> debug_report.txt 2>&1
        
        echo "" >> debug_report.txt
        echo "=== 文件信息 ===" >> debug_report.txt
        file demo_armv7_debug >> debug_report.txt
        echo "文件大小: $(stat -c%s demo_armv7_debug) 字节" >> debug_report.txt
        
    - name: 上传调试产物
      uses: actions/upload-artifact@v4
      with:
        name: debug-artifacts
        path: |
          demo_armv7_debug
          debug_report.txt
          main.c
        retention-days: 7
        
    - name: 显示调试结果
      run: |
        echo "=== 调试完成 ==="
        echo "调试级别: ${{ github.event.inputs.debug_level }}"
        echo "测试运行: ${{ github.event.inputs.run_tests }}"
        echo ""
        echo "=== 调试报告摘要 ==="
        cat debug_report.txt 